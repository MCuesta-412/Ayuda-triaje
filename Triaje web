import React, { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Upload } from "lucide-react";

export default function ChatbotTriaje() {
  const [input, setInput] = useState("");
  const [image, setImage] = useState(null);
  const [response, setResponse] = useState("");

  const handleImageUpload = (event) => {
    const file = event.target.files[0];
    setImage(file);
  };

  const handleSubmit = async () => {
    if (!input) return;
    
    // Simulaci√≥n de respuesta del chatbot basada en s√≠ntomas
    setResponse("Procesando informaci√≥n...");
    setTimeout(() => {
      const lowerInput = input.toLowerCase();
      
      if (
        lowerInput.includes("dolor en el pecho") ||
        lowerInput.includes("p√©rdida de conciencia") ||
        lowerInput.includes("dificultad para respirar") ||
        lowerInput.includes("hemorragia intensa")
      ) {
        setResponse("‚ö†Ô∏è Urgente: Debes acudir de inmediato a urgencias del hospital m√°s cercano.");
      } else if (
        lowerInput.includes("fiebre leve") ||
        lowerInput.includes("tos") ||
        lowerInput.includes("dolor de garganta") ||
        lowerInput.includes("mareo leve")
      ) {
        setResponse("üîπ Se recomienda acudir al centro de salud para una evaluaci√≥n m√©dica.");
      } else {
        setResponse("‚ÑπÔ∏è Si los s√≠ntomas persisten o empeoran, consulta con un profesional m√©dico.");
      }
    }, 2000);
  };

  return (
    <div className="flex flex-col items-center p-4 max-w-md mx-auto">
      <Card className="w-full p-4 shadow-lg rounded-2xl">
        <CardContent>
          <h2 className="text-xl font-semibold mb-2">Chatbot de Triaje M√©dico</h2>
          <Textarea
            placeholder="Describe tus s√≠ntomas..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            className="mb-2"
          />
          <label className="flex items-center gap-2 cursor-pointer">
            <Upload className="w-5 h-5" />
            <span>Subir imagen opcional</span>
            <Input type="file" className="hidden" onChange={handleImageUpload} />
          </label>
          {image && <p className="text-sm mt-1">Imagen seleccionada: {image.name}</p>}
          <Button className="mt-3 w-full" onClick={handleSubmit}>Enviar</Button>
          {response && <p className="mt-4 font-medium">{response}</p>}
        </CardContent>
      </Card>
    </div>
  );
}

